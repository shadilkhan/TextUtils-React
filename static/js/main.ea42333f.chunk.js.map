{"version":3,"sources":["components/About.js","components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["About","props","mystyle","color","mode","backgroundColor","className","style","id","type","Navbar","to","title","aboutText","onClick","toggleMode","htmlfor","textMode","TextForm","useState","text","setText","heading","onChange","event","target","value","rows","disabled","length","newText","toUpperCase","showAlert","toLowerCase","text1","document","getElementById","select","navigator","clipboard","writeText","split","join","filter","ele","Alert","height","alert","role","word","lower","charAt","slice","capitalize","msg","App","settextMode","setMode","setAlert","message","setTimeout","body","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ea42333f.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function About(props) {\r\n\r\n    let mystyle={\r\n        color:props.mode===\"dark\"?\"white\":\"#042743\",\r\n        backgroundColor:props.mode===\"dark\"?\"#042743\":\"white\"\r\n    }\r\n        \r\n    return (\r\n        <div className=\"container\" style={{color:props.mode===\"dark\"?\"white\":\"#042743\",}}>\r\n            <h1 className=\"my-3\">About Us</h1>\r\n                    <div className=\"accordion\" id=\"accordionExample\">\r\n        <div className=\"accordion-item\">\r\n            <h2 className=\"accordion-header\" id=\"headingOne\">\r\n            <button className=\"accordion-button\" style={mystyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n               <strong> Analyze Your Text </strong>\r\n            </button>\r\n            </h2>\r\n            <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n            <div className=\"accordion-body\" style={mystyle}>\r\n                Textutils give you a way to analyze your text quickly and efficiently. Be it word count\r\n                character count or many thingss....\r\n            </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"accordion-item\">\r\n            <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n            <button className=\"accordion-button collapsed\" style={mystyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n               <strong> Free to use </strong>\r\n            </button>\r\n            </h2>\r\n            <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n            <div className=\"accordion-body\" style={mystyle}>\r\n                TextUtils is a free character counter tool that provides instant character count & word count statistics for a given text.TextUtils reports the number of words and character. Thus it is suitable for writing text word character limit.\r\n            </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"accordion-item\" >\r\n            <h2 className=\"accordion-header\" id=\"headingThree\">\r\n            <button className=\"accordion-button collapsed\" style={mystyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n               <strong> Browser compatible </strong>\r\n            </button>\r\n            </h2>\r\n            <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n            <div className=\"accordion-body\" style={mystyle}>\r\n                This word counter software works in any web browser such as Chrome , Firefox , Internet Explorer ,Safari, Opera.It suits to count character in facebook ,blog , books , excel document, pdf document, essays , etc.\r\n            </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n        {/* <div className=\"container my-3\">\r\n        <button type=\"button\" onClick={ToggleStyle} className=\"btn btn-primary \">{btnText}</button>        \r\n        </div> */}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Link} from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        \r\n            <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode\r\n            }`}>\r\n  <div className=\"container-fluid\">\r\n    <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link \" aria-current=\"page\" to=\"/\">Home</Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link \" to=\"/about\">{props.aboutText}</Link>\r\n        </li>\r\n        </ul>\r\n      <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n        <input onClick={props.toggleMode} className=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n        <label className=\"form-check-label\" htmlfor=\"flexSwitchCheckDefault\">{props.textMode}</label>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n        \r\n    );\r\n}\r\n\r\n","import React,{useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    function handleUpClick(){\r\n        let newText=text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"converted to uppercase!\",\"succesfully\");\r\n    }\r\n\r\n    function handleLoClick(){\r\n        let newText=text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"converted to lowercase!\",\"succesfully\");\r\n    }\r\n\r\n    function handleCopyClick(){\r\n        let text1=document.getElementById(\"myBox\");\r\n        text1.select();\r\n        navigator.clipboard.writeText(text1.value);\r\n        props.showAlert(\"copied to clipboard!\",\"succesfully\");\r\n    }\r\n    \r\n\r\n    function handleClearClick(){\r\n        let newText=\"\";\r\n        setText(newText);\r\n        props.showAlert(\"clear all!\",\"succesfully\");\r\n    }\r\n    function handleExtraSpacesClick(){\r\n        let newText=text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.showAlert(\"remove extraspaces!\",\"succesfully\");\r\n    }\r\n\r\n    function handleOnChange(event){\r\n        setText(event.target.value);\r\n    }\r\n    const[text,setText]=useState(\"Enter your text here\");\r\n    \r\n    return (\r\n        <> \r\n            <div className=\"container my-3\" style={{\r\n                color:props.mode==='dark'?'white':'black'\r\n            }} >\r\n            <h2 className=\"mb-4\">{props.heading}</h2>\r\n            <textarea className=\"form-control\" onChange={handleOnChange} style={{\r\n                backgroundColor:props.mode==='dark'?'#1d164c':'white',color:props.mode==='dark'?'white':'black'\r\n            }} value={text} id=\"myBox\" rows=\"8\"></textarea>\r\n            <button disabled={text.length===0} className=\"btn btn-primary my-3\" onClick={handleUpClick}>Convert To UpperCase</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary my-3 mx-4\" onClick={handleLoClick}>Convert To LowerCase</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary my-3 mx-2\" onClick={handleClearClick}>Clear Text</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary my-3 mx-2\" onClick={handleCopyClick}>Copy Text</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary my-3 mx-2\" onClick={handleExtraSpacesClick}>Remove Extra Spaces</button>\r\n            \r\n            \r\n            </div>\r\n            <div className=\"container my-3\" style={{\r\n                color:props.mode==='dark'?'white':'black'\r\n            }} >\r\n            <h2>Your Text Summary</h2>\r\n            <p>{text.split(/\\s+/).filter((ele)=>{return ele.length!==0}).length}  <span>WORDS</span> and {text.length}  CHARACTER and {text.split(\" \").length-1}  SPACES</p>\r\n            <p>{0.008 * text.split(\" \").filter((ele)=>{return ele.length!==0}).length} Minutes To Read Above </p>\r\n            <h3>Preview</h3>\r\n            <p> {text.length>0?text:\"Nothing to preview\"} </p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    function capitalize(word){\r\n        const lower=word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n\r\n    }\r\n    return (\r\n        <div style={{height:\"50px\"}}>\r\n       { props.alert &&<div className=\"alert alert-warning alert-dismissible fade show\" role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong>,{props.alert.msg}\r\n       \r\n        </div>}\r\n        </div>\r\n    )\r\n}\r\n","\nimport './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React,{useState} from 'react'\nimport Alert from \"./components/Alert\";\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\n\nfunction App() {\n  const [textMode, settextMode] = useState(\"Enable DarkMode\");\n  const [mode,setMode]=useState(\"light\");\n  const [alert, setAlert] = useState(null);\n\n   function showAlert(message,type){\n     setAlert({\n       msg:message,\n       type:type\n     })\n     setTimeout(() => {\n       setAlert(null);\n     }, 2000);\n   }\n\n  function toggleMode(){\n    if(mode===\"light\"){\n      setMode(\"dark\");\n      settextMode(\"Disable DarkMode\");\n      document.body.style.backgroundColor=\"#1c1a48\";\n      showAlert(\"You Enabled DarkMode\",\"Succesfully\");\n      // \n      \n      // setInterval(() => {\n      //   document.title=\"TextUtils is Amazing Mode\";\n      // }, 2000);\n      // setInterval(() => {\n      //   document.title=\"Install TextUtils Now\";\n      // }, 1500);\n    }\n    else{\n      setMode(\"light\");\n      settextMode(\"Enable DarkMode\");\n      document.body.style.backgroundColor=\"white\";\n      showAlert(\"You Disable DarkMode\",\"Succesfully\");\n      // document.title=\"TextUtils-LightMode\";\n    }\n  }\n  return (<>\n  <Router>\n    <Navbar title=\"TextUtils\" aboutText=\"About Us\" mode={mode} toggleMode={toggleMode} textMode={textMode}/>\n    <Alert alert={alert}/>\n    <Switch>\n          <Route exact path=\"/about\">\n            <About mode={mode}/>\n          </Route>\n          <Route exact path=\"/\">\n          <TextForm heading=\"Try TextUtils - Word counter , Character counter , Remove extra spaces\" mode={mode} showAlert={showAlert}/>\n          </Route>\n        </Switch>\n        </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}